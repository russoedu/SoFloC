{"version":3,"sources":["assets/sofloc-logo.svg","components/Logo.tsx","components/ViewOnButton.tsx","components/Header.tsx","assets/where-is-my-flow.png","pages/Home.tsx","App.tsx","index.tsx"],"names":["Logo","sx","Typography","className","variant","noWrap","component","href","src","logo","alt","ViewOnButton","url","text","icon","Button","color","display","sm","xs","endIcon","target","rel","xm","paddingRight","Header","AppBar","position","minWidth","enableColorOnDark","Container","Toolbar","disableGutters","justifyContent","Box","flexGrow","ButtonGroup","ml","Home","Paper","elevation","Card","CardMedia","image","whereIsMyFlow","CardContent","App","CssBaseline","theme","createTheme","palette","getContrastText","fontColorContrast","mode","background","default","primary","main","secondary","error","warning","page","ThemeProvider","ReactDOM","render","document","getElementById"],"mappings":"2WAAe,G,MAAA,IAA0B,yC,OCKlC,SAASA,EAAT,GAEH,IAFoBC,EAErB,EAFqBA,GAGtB,OACE,cAACC,EAAA,EAAD,CACEC,UAAU,mBACVC,QAAQ,KACRC,QAAM,EACNC,UAAU,MACVL,GAAIA,EALN,SAOE,mBAAGM,KAAK,IAAR,SACE,qBAAKC,IAAKC,EAAMC,IAAI,oB,mBCdrB,SAASC,EAAT,GAIF,IAJ2BC,EAI5B,EAJ4BA,IAAKC,EAIjC,EAJiCA,KAAMC,EAIvC,EAJuCA,KAKzC,OACE,qCACE,cAACC,EAAA,EAAD,CACEZ,UAAU,gBACVa,MAAM,YACNZ,QAAQ,YACRH,GAAI,CAAEgB,QAAS,CAAEC,GAAI,OAAQC,GAAI,SACjCC,QAASN,EACTP,KAAMK,EACNS,OAAO,SACPC,IAAI,aARN,SAUGT,IAEH,cAACE,EAAA,EAAD,CACEZ,UAAU,sCACVa,MAAM,YACNZ,QAAQ,YACRH,GAAI,CAAEgB,QAAS,CAAEM,GAAI,OAAQL,GAAI,QAAUM,aAAc,QAJ3D,SAME,sBAAMrB,UAAU,qBAAhB,SACGW,SCtBJ,SAASW,IACd,OACE,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAS1B,GAAI,CAAE2B,SAAU,KAAOC,mBAAiB,EAAlE,SACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAASC,gBAAc,EAAC/B,GAAI,CAAEgC,eAAgB,QAAShB,QAAS,QAAhE,UACE,cAAC,EAAD,IAEA,cAACiB,EAAA,EAAD,CAAKjC,GAAI,CAAEkC,SAAU,EAAGlB,QAAS,QAAjC,SACE,eAACmB,EAAA,EAAD,CAAahC,QAAQ,YAAYH,GAAI,CAAEoC,GAAI,SAA3C,UACE,cAAC,EAAD,CACEzB,IAAI,6CACJC,KAAK,iBACLC,KAAM,cAAC,IAAD,MAER,cAAC,EAAD,CACEF,IAAI,uCACJC,KAAK,cACLC,KAAM,cAAC,IAAD,kB,wCCxBP,G,MAAA,IAA0B,8CCIlC,SAASwB,IACd,OACE,cAACR,EAAA,EAAD,CAAW3B,UAAU,YAAYF,GAAI,CAAE2B,SAAU,KAAjD,SACE,eAACW,EAAA,EAAD,CAAOpC,UAAU,SAASqC,UAAW,EAArC,UACE,wCAEA,8BAAG,4CAAH,qJAEA,sCAEA,6IAA+G,iCAAQ,4CAAvH,+GAA6P,iCAAQ,4CAArQ,OAEA,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEpC,UAAU,MACVqC,MAAOC,EACPlC,IAAI,sBAEN,cAACmC,EAAA,EAAD,UACE,cAAC3C,EAAA,EAAD,CAAYE,QAAQ,QAAQY,MAAM,iBAAlC,gDAMJ,sHAEA,8BAAG,4CAAH,iIAEA,sCACA,8BAAG,4CAAH,gIAEA,8BAAG,4CAAH,qFC/BD,SAAS8B,IAEd,OACE,eAACC,EAAA,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,O,2BCHAC,EAAQC,YAAY,CACxBC,QAAS,CACPC,gBAAiBC,IACjBC,KAAM,OACNC,WAAY,CACVC,QAAS,WAEXC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAERE,MAAO,CACLF,KAAM,WAERG,QAAS,CACPH,KAAM,cAKNI,EACJ,cAACC,EAAA,EAAD,CAAed,MAAOA,EAAtB,SACE,cAACD,EAAA,EAAD,UACE,cAAC,EAAD,QAKNgB,IAASC,OAAOH,EAAMI,SAASC,eAAe,W","file":"static/js/main.a67d4601.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sofloc-logo.446b541e.svg\";","import { Typography } from \"@mui/material\";\nimport { SxProps, Theme } from \"@mui/system\";\nimport './Logo.css'\nimport logo from '../assets/sofloc-logo.svg'\n\nexport function Logo ({ sx }: {\n  sx?: SxProps<Theme>,\n}) {\n  return(\n    <Typography\n      className='navbar-item logo'\n      variant='h5'\n      noWrap\n      component='div'\n      sx={sx}\n    >\n      <a href='/'>\n        <img src={logo} alt=\"sofloc-logo\" />\n      </a>\n    </Typography>\n  )\n}\n","import { Button } from \"@mui/material\";\nimport './ViewOnButton.css'\n\nexport function ViewOnButton ({ url, text, icon }: {\n  url: string,\n  text: string,\n  icon: any,\n }) {\n  return (\n    <>\n      <Button\n        className='vob-get-links'\n        color='secondary'\n        variant='contained'\n        sx={{ display: { sm: 'flex', xs: 'none' } }}\n        endIcon={icon}\n        href={url}\n        target='_blank'\n        rel='noreferrer'\n      >\n        {text}\n      </Button>\n      <Button\n        className='vob-get-links vob-get-links-compact'\n        color='secondary'\n        variant='contained'\n        sx={{ display: { xm: 'flex', sm: 'none' }, paddingRight: '10px' }}\n      >\n        <span className='vob-get-links-icon'>\n          {icon}\n        </span>\n      </Button>\n    </>\n  )\n}\n","import { AppBar, Box, ButtonGroup, Container, Toolbar } from '@mui/material'\nimport './Header.css'\nimport { FaNpm } from 'react-icons/fa'\nimport { GoMarkGithub } from 'react-icons/go'\nimport { Logo } from './Logo'\nimport { ViewOnButton } from './ViewOnButton'\n\nexport function Header () {\n  return (\n    <AppBar position='sticky' sx={{ minWidth: 300 }} enableColorOnDark>\n      <Container>\n        <Toolbar disableGutters sx={{ justifyContent: 'start', display: 'flex' }}>\n          <Logo/>\n\n          <Box sx={{ flexGrow: 0, display: 'flex' }}>\n            <ButtonGroup variant=\"contained\" sx={{ ml: '0.1em' }}>\n              <ViewOnButton\n                url='https://github.com/russoedu/SoFloC-service'\n                text='view on GitHub'\n                icon={<GoMarkGithub />}\n              />\n              <ViewOnButton\n                url='https://www.npmjs.com/package/sofloc'\n                text='view on NPM'\n                icon={<FaNpm />}\n              />\n            </ButtonGroup>\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/where-is-my-flow.55a25abf.png\";","import { Card, CardContent, CardMedia, Container, Paper, Typography } from '@mui/material'\nimport './Home.css'\nimport whereIsMyFlow from '../assets/where-is-my-flow.png'\n\nexport function Home () {\n  return (\n    <Container className='container' sx={{ minWidth: 300 }}>\n      <Paper className='readme' elevation={3}>\n        <h1>SoFloc</h1>\n\n        <p><strong>SoFloC</strong> (Solution Flow Copy) is a no hustle app created to help you when you need to copy a Flow (Power Automate) inside a Solution on Power Platform.</p>\n\n        <h2>Why?</h2>\n\n        <p>Power Platform does not provide an easy way to create a copy of a Power Automate (Flow) when it is inside a <strong><em>Solution</em></strong>. You can create a copy inside the platform, but you will never be able to add this copied Flow back to the <strong><em>Solution</em></strong>.</p>\n\n        <Card>\n          <CardMedia\n            component=\"img\"\n            image={whereIsMyFlow}\n            alt=\"Where is my flow?\"\n          />\n          <CardContent>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Where the Flow I just copied?\n            </Typography>\n          </CardContent>\n        </Card>\n\n        <p>The option you end up having is recreating the whole Flow again or doing it manually.</p>\n\n        <p><strong>SoFloC</strong> provides an easy solution to read the files on a Solution and update the version and create copies of the specified Flows.</p>\n\n        <h2>How?</h2>\n        <p><strong>SoFloC</strong> is as easy as it could be. Open the app, drag a Solution zip, update the version and create as many Flow copies you want.</p>\n\n        <p><strong>SoFloC</strong> does not require any installation, just download the file and execute it.</p>\n      </Paper>\n    </Container>\n  )\n}\n","import CssBaseline from '@mui/material/CssBaseline'\nimport './App.css'\nimport { Header } from './components/Header'\nimport { Home } from './pages/Home'\n\nexport function App() {\n\n  return (\n    <CssBaseline>\n      <Header></Header>\n      <Home/>\n    </CssBaseline>\n  )\n}\n","import fontColorContrast from 'font-color-contrast'\nimport ReactDOM from 'react-dom'\nimport { App } from './App'\nimport './index.css'\nimport CssBaseline from '@mui/material/CssBaseline'\nimport { createTheme, ThemeProvider } from '@mui/material'\n\nconst theme = createTheme({\n  palette: {\n    getContrastText: fontColorContrast,\n    mode: 'dark',\n    background: {\n      default: '#424242',\n    },\n    primary: {\n      main: '#ffffff',\n    },\n    secondary: {\n      main: '#2e59a4',\n    },\n    error: {\n      main: '#d64161',\n    },\n    warning: {\n      main: '#ff7b25',\n    },\n  },\n})\n\nconst page = (\n  <ThemeProvider theme={theme}>\n    <CssBaseline>\n      <App />\n    </CssBaseline>\n  </ThemeProvider>\n)\n\nReactDOM.render(page, document.getElementById('root'))\n"],"sourceRoot":""}